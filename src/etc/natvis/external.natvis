<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="arrayvec::array_string::ArrayString&lt;*&gt;">
    <DisplayString>{xs,[len]s8}</DisplayString>
    <StringView>{xs,[len]s8}</StringView>
    <Expand>
      <Item Name="[len]" ExcludeView="simple">len</Item>
      <Item Name="[capacity]" ExcludeView="simple">$T1</Item>
      <CustomListItems>
        <Variable Name="i" InitialValue="0" />
        <Size>len</Size>
        <Loop>
          <Item>(char)xs[i].value.value</Item>
          <Exec>i++</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="arrayvec::arrayvec::ArrayVec&lt;*,*&gt;">
    <DisplayString>{{ len={len} }}</DisplayString>
    <Expand>
      <Item Name="[len]" ExcludeView="simple">len</Item>
      <Item Name="[capacity]" ExcludeView="simple">$T2</Item>
      <CustomListItems>
        <Variable Name="i" InitialValue="0" />
        <Size>len</Size>
        <Loop>
          <Item>($T1)xs[i].value.value</Item>
          <Exec>i++</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="http::byte_str::ByteStr">
    <DisplayString>{bytes.ptr,[bytes.len]sb}</DisplayString>
  </Type>

  <Type Name="http::header::map::Bucket&lt;*&gt;">
    <DisplayString>{{ key={key}, value={value} }}</DisplayString>
    <Expand>
      <Item Name="[hash]">hash</Item>
      <Item Name="[key]">key</Item>
      <Item Name="[value]">value</Item>
      <Item Name="[links]">links</Item>
    </Expand>
  </Type>

  <Type Name="http::header::map::HeaderMap&lt;*&gt;">
    <Expand>
      <ExpandedItem>entries</ExpandedItem>
      <Item Name="[extra_values]">extra_values</Item>
    </Expand>
  </Type>

  <Type Name="http::header::name::HeaderName">
    <Intrinsic Name="inner_tag" Expression="inner.discriminant" />
    <DisplayString Condition="inner_tag() == 0">{inner.variant0.__0,en}</DisplayString>
    <DisplayString Condition="inner_tag() == 1">{inner.variant1.__0.__0.bytes.ptr,[inner.variant1.__0.__0.bytes.len]s8}</DisplayString>
  </Type>

  <Type Name="http::header::value::HeaderValue">
    <DisplayString>{(char*)inner.ptr,[inner.len]}</DisplayString>
    <Expand>
      <Item Name="[is_sensitive]">is_sensitive</Item>
    </Expand>
  </Type>

  <Type Name="http::method::Method">
    <DisplayString>{__0}</DisplayString>
  </Type>

  <Type Name="http::request::Builder">
    <Expand>
      <ExpandedItem>inner</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="http::request::Parts">
    <DisplayString>{{ method={method}, uri={uri} }}</DisplayString>
    <Expand>
      <Item Name="[method]">method</Item>
      <Item Name="[uri]">uri</Item>
      <Item Name="[version]">version</Item>
      <Item Name="[headers]">headers</Item>
      <Item Name="[extensions]">extensions</Item>
    </Expand>
  </Type>

  <Type Name="http::response::Parts">
    <DisplayString>{{ status={status} }}</DisplayString>
    <Expand>
      <Item Name="[status]">status</Item>
      <Item Name="[version]">version</Item>
      <Item Name="[headers]">headers</Item>
      <Item Name="[extensions]">extensions</Item>
    </Expand>
  </Type>

  <Type Name="http::status::StatusCode">
    <DisplayString>{__0,d}</DisplayString>
  </Type>

  <Type Name="http::uri::authority::Authority">
    <DisplayString Condition="data.bytes.len &gt; 0">{data.bytes.ptr,[data.bytes.len]sb}</DisplayString>
  </Type>

  <Type Name="http::uri::path::PathAndQuery">
    <Intrinsic Name="path_length" Expression="data.bytes.len" />
    <DisplayString Condition="path_length() == 0">/</DisplayString>
    <DisplayString>{data.bytes.ptr,[data.bytes.len]sb}</DisplayString>
  </Type>

  <Type Name="http::uri::scheme::Scheme">
    <Intrinsic Name="inner_tag" Expression="inner.discriminant" />
    <DisplayString Condition="inner_tag() == 0">{inner.variant0,en}</DisplayString>
    <DisplayString Condition="inner_tag() == 1">{inner.variant1.__0,en}</DisplayString>
    <DisplayString Condition="inner_tag() == 2">{inner.variant2.__0,en}</DisplayString>
  </Type>

  <Type Name="http::uri::Uri">
    <Intrinsic Name="scheme_tag" Expression="scheme.inner.discriminant" />
    <Intrinsic Name="protocol_tag" Expression="scheme.inner.variant1.__0" />
    <DisplayString Condition="scheme_tag() == 0">{authority}{path_and_query}</DisplayString>
    <DisplayString Condition="scheme_tag() == 1 &amp;&amp; protocol_tag() == 0">http://{authority}{path_and_query}</DisplayString>
    <DisplayString Condition="scheme_tag() == 1 &amp;&amp; protocol_tag() == 1">https://{authority}{path_and_query}</DisplayString>
    <DisplayString>{scheme}://{authority}{path_and_query}</DisplayString>
    <Expand>
      <Item Name="[scheme]">scheme</Item>
      <Item Name="[authority]">authority</Item>
      <Item Name="[path_and_query]">path_and_query</Item>
    </Expand>
  </Type>

  <Type Name="http::version::Version">
    <DisplayString>{__0,en}</DisplayString>
  </Type>

  <Type Name="indexmap::map::core::IndexMapCore&lt;*,*&gt;">
    <DisplayString>{{ len={entries.len} }}</DisplayString>
    <Expand>
      <CustomListItems>
        <Variable Name="i" InitialValue="0" />
        <Size>entries.len</Size>
        <Loop>
          <Break Condition="i == entries.len" />
          <Item Name="{entries.buf.ptr.pointer[i].key}">entries.buf.ptr.pointer[i].value</Item>
          <Exec>i++</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="indexmap::map::IndexMap&lt;*,*,*&gt;">
    <Expand>
      <ExpandedItem>core</ExpandedItem>
      <Item Name="[hash_builder]">hash_builder</Item>
    </Expand>
  </Type>

  <Type Name="once_cell::imp::OnceCell&lt;*&gt;">
    <DisplayString>{value}</DisplayString>
    <Expand>
      <Item Name="[state_and_queue]">state_and_queue</Item>
      <Item Name="[marker]">_marker</Item>
      <Item Name="[value]">value</Item>
    </Expand>
  </Type>

  <Type Name="once_cell::race::OnceBool">
    <DisplayString>{inner.inner.v.value == 1}></DisplayString>
  </Type>

  <Type Name="once_cell::race::OnceNonZeroUsize">
    <Expand>
      <ExpandedItem>inner</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="once_cell::sync::Lazy&lt;*&gt;">
    <Expand>
      <ExpandedItem>cell</ExpandedItem>
      <Item Name="[init]">init</Item>
    </Expand>
  </Type>

  <Type Name="once_cell::sync::OnceCell&lt;*&gt;">
    <Expand>
      <ExpandedItem>__0</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="once_cell::unsync::Lazy&lt;*&gt;">
    <Expand>
      <ExpandedItem>cell</ExpandedItem>
      <Item Name="[init]">init</Item>
    </Expand>
  </Type>

  <Type Name="once_cell::unsync::OnceCell&lt;*&gt;">
    <Expand>
      <ExpandedItem>inner</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="regex::re_builder::unicode::RegexBuilder">
    <DisplayString>{{ text={__0.pats[0]} }}</DisplayString>
    <Expand>
      <ExpandedItem>__0</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="regex::re_unicode::Captures">
    <Intrinsic Name="location" Expression="locs.__0.buf.ptr.pointer[i].variant1.__0">
      <Parameter Name="i" Type="int" />
    </Intrinsic>
    <Intrinsic Name="match_length" Expression="location(end)-location(start)">
      <Parameter Name="start" Type="int" />
      <Parameter Name="end" Type="int" />
    </Intrinsic>
    <DisplayString>{{ named_groups={named_groups.ptr.pointer->data.base.table.table.items} }}</DisplayString>
    <Expand>
      <Item Name="[text]">text</Item>
      <Item Name="[named_groups]">named_groups</Item>
      <CustomListItems>
        <Variable Name="i" InitialValue="0" />
        <Loop>
          <Break Condition="locs.__0.buf.ptr.pointer[i].discriminant == 0" />
          <Item>(char*)text.data_ptr+location(i),[location(i+1)-location(i)]s8</Item>
          <Exec>i+=2</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="regex::re_unicode::Match">
    <DisplayString>{text.data_ptr+start,[end-start]s8}</DisplayString>
    <Expand>
      <Item Name="[text]">text</Item>
      <Item Name="[start]">start</Item>
      <Item Name="[end]">end</Item>
    </Expand>
  </Type>

  <Type Name="regex::re_unicode::Regex">
    <DisplayString>{{ text={__0.ro.ptr.pointer->data.res[0]} }}</DisplayString>
    <Expand>
      <ExpandedItem>__0.ro</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="serde_json::map::Map&lt;*,*&gt;">
    <DisplayString>{{ len={map.length} }}</DisplayString>
    <Expand>
      <ExpandedItem>map</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="serde_json::number::Number">
    <Intrinsic Name="tag" Expression="n.discriminant" />
    <DisplayString Condition="tag() == 0">{n.variant0.__0}</DisplayString>
    <DisplayString Condition="tag() == 1">{n.variant1.__0}</DisplayString>
    <DisplayString Condition="tag() == 2">{n.variant2.__0}</DisplayString>
  </Type>

  <Type Name="enum$&lt;serde_json::value::Value&gt;" Priority="MediumHigh">
    <Intrinsic Name="tag" Expression="discriminant" />
    <DisplayString Condition="tag() == 0">{{ Null }}</DisplayString>
    <DisplayString Condition="tag() == 1">{{ Bool({variant1.__0}) }}</DisplayString>
    <DisplayString Condition="tag() == 2">{{ Number({variant2.__0}) }}</DisplayString>
    <DisplayString Condition="tag() == 3">{{ String({variant3.__0}) }}</DisplayString>
    <DisplayString Condition="tag() == 4">{{ Array({variant4.__0}) }}</DisplayString>
    <DisplayString Condition="tag() == 5">{{ Object({variant5.__0}) }}</DisplayString>

    <Expand>
      <ExpandedItem Condition="tag() == 1">variant1.__0</ExpandedItem>
      <ExpandedItem Condition="tag() == 2">variant2.__0</ExpandedItem>
      <ExpandedItem Condition="tag() == 3">variant3.__0</ExpandedItem>
      <ExpandedItem Condition="tag() == 4">variant4.__0</ExpandedItem>
      <ExpandedItem Condition="tag() == 5">variant5.__0</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="url::Url">
    <Intrinsic Name="ptr" Expression="serialization.vec.buf.ptr.pointer" />
    <DisplayString>{{ url={serialization} }}</DisplayString>
    <Expand>
      <Synthetic Name="[scheme]">
        <DisplayString>{(char*)(ptr()),[scheme_end]s8}</DisplayString>
      </Synthetic>
      <Synthetic Name="[fragment]" Condition="fragment_start.discriminant == 1">
        <DisplayString>{(char*)(ptr()+fragment_start.variant1.__0+1),[(serialization.vec.len-fragment_start.variant1.__0-1)]s8}</DisplayString>
      </Synthetic>
      <Synthetic Name="[host]" Condition="host.discriminant != 0">
        <DisplayString>{(char*)(ptr()+host_start),[host_end-host_start]s8}</DisplayString>
      </Synthetic>
      <Synthetic Name="[port]" Condition="port.discriminant == 1">
        <DisplayString>{port.variant1.__0,d}</DisplayString>
      </Synthetic>
      <Synthetic Name="[path]">
        <DisplayString Condition="query_start.discriminant == 0 &amp;&amp; fragment_start.discriminant == 0">{(char*)(ptr()+path_start),[(serialization.vec.len-path_start)]s8}</DisplayString>
        <DisplayString Condition="query_start.discriminant == 1">{(char*)(ptr()+path_start),[(query_start.variant1.__0-path_start)]s8}</DisplayString>
        <DisplayString Condition="fragment_start.discriminant == 1">{(char*)(ptr()+path_start),[(fragment_start.variant1.__0-path_start)]s8}</DisplayString>
      </Synthetic>
      <Synthetic Name="[query]" Condition="query_start.discriminant == 1">
        <DisplayString Condition="fragment_start.discriminant == 0">{(char*)(ptr()+query_start.variant1.__0+1),[((serialization.vec.len)-(query_start.variant1.__0+1))]s8}</DisplayString>
        <DisplayString Condition="fragment_start.discriminant == 1">{(char*)(ptr()+query_start.variant1.__0+1),[((fragment_start.variant1.__0)-(query_start.variant1.__0+1))]s8}</DisplayString>
      </Synthetic>
      <Item Name="[username_end]">username_end</Item>
    </Expand>
  </Type>

  <Type Name="widestring::ucstr::UCStr&lt;u16&gt;">
    <Intrinsic Name="length" Expression="wcslen((WCHAR*)inner)" />
    <DisplayString>{(char16_t*)inner,[length()]su}</DisplayString>
    <Expand>
      <Item Name="[len]" ExcludeView="simple">length()</Item>
      <Synthetic Name="[chars]">
        <Expand>
          <ArrayItems>
            <Size>length()</Size>
            <ValuePointer>(char16_t*)inner</ValuePointer>
          </ArrayItems>
        </Expand>
      </Synthetic>
    </Expand>
  </Type>

  <Type Name="widestring::ucstring::UCString&lt;u16&gt;">
    <DisplayString>{(char16_t*)inner.data_ptr,[inner.length]su}</DisplayString>
    <Expand>
      <Item Name="[len]" ExcludeView="simple">inner.length</Item>
      <Synthetic Name="[chars]">
        <Expand>
          <ArrayItems>
            <Size>inner.length</Size>
            <ValuePointer>(char16_t*)inner.data_ptr</ValuePointer>
          </ArrayItems>
        </Expand>
      </Synthetic>
    </Expand>
  </Type>

  <Type Name="widestring::ucstring::UCString&lt;u32&gt;">
    <Expand>
      <Item Name="[len]" ExcludeView="simple">inner.length</Item>
      <Synthetic Name="[chars]">
        <Expand>
          <ArrayItems>
            <Size>inner.length</Size>
            <ValuePointer>(char32_t*)inner.data_ptr</ValuePointer>
          </ArrayItems>
        </Expand>
      </Synthetic>
    </Expand>
  </Type>

  <Type Name="widestring::ustring::UString&lt;u16&gt;">
    <DisplayString>{(char16_t*)inner.buf.ptr.pointer,[inner.len]su}</DisplayString>
    <Expand>
      <Item Name="[len]" ExcludeView="simple">inner.len</Item>
      <Synthetic Name="[chars]">
        <Expand>
          <ArrayItems>
            <Size>inner.len</Size>
            <ValuePointer>(char16_t*)inner.buf.ptr.pointer</ValuePointer>
          </ArrayItems>
        </Expand>
      </Synthetic>
    </Expand>
  </Type>

  <Type Name="widestring::ustring::UString&lt;u32&gt;">
    <Expand>
      <Item Name="[len]" ExcludeView="simple">inner.len</Item>
      <Synthetic Name="[chars]">
        <Expand>
          <ArrayItems>
            <Size>inner.len</Size>
            <ValuePointer>(char32_t*)inner.buf.ptr.pointer</ValuePointer>
          </ArrayItems>
        </Expand>
      </Synthetic>
    </Expand>
  </Type>

  <Type Name="windows::result::hresult::HRESULT">
    <DisplayString>{(HRESULT)__0}</DisplayString>
  </Type>
</AutoVisualizer>